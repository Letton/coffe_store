version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: food_delivery_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d food_delivery_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  users:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '4001:4001'
    command: ["yarn", "start:dev", "users"]
    depends_on:
      postgres:
        condition: service_healthy
    

  products:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - users
    ports:
      - '4002:4002'
    command: ["yarn", "start:dev", "products"]

  orders:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - products
      - users
    ports:
      - '4003:4003'
    command: ["yarn", "start:dev", "orders"]

  gateway:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - products
      - users
      - orders
    ports:
      - '4000:4000'
    command: ["yarn", "start:dev", "gateway"]

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - gateway
    environment:
      NEXT_PUBLIC_API_URL: http://localhost/api
    ports:
      - '3000:3000'

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client

# volumes:
#   pgdata:

volumes:
  postgres-data: